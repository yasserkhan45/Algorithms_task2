https://leetcode.com/explore/learn/card/linked-list/214/two-pointer-technique/1215/



/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode *getIntersectionNode(ListNode *headA, ListNode *headB) {
        ListNode *curA = headA;
        ListNode *curB = headB;
        
        if (curA == NULL || curB == NULL) return NULL;
        
        while(curA != NULL && curB != NULL && curA != curB){
            curA = curA -> next;
            curB = curB -> next;
            
            if(curA == curB) return curA;
            
            if(curA == NULL) curA = headB;
            if(curB == NULL) curB = headA;
        }
        return curA;
    }
};
