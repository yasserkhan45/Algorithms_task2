https://leetcode.com/explore/learn/card/linked-list/214/two-pointer-technique/1296/


/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* removeNthFromEnd(ListNode* head, int n) {
        ListNode *fast = head;
        ListNode *slow = head;
        if(head -> next == NULL){
            delete head;
            return NULL;
        }
        while(n--){
            fast = fast -> next;
        }
        if(fast == NULL){
            slow = head;
            head = head -> next;
            delete slow;
            return head;
        }
        while(fast -> next != NULL){
            slow = slow -> next;
            fast = fast -> next;
        }
            fast = slow -> next;
            slow -> next = fast -> next;
            delete fast;
        
        return head;
    }
};
