https://leetcode.com/explore/learn/card/linked-list/219/classic-problems/1208/



/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* oddEvenList(ListNode* head) {
        if(head == NULL || head -> next == NULL) return head;
        ListNode *evenHead = head -> next;
        ListNode *currO = head;
        ListNode *currE = head -> next;
        while(currO -> next && currE -> next){
            currO -> next = currE -> next;
            currO = currO -> next;
            
            currE -> next = currO -> next;
            currE = currE -> next;   
        }
        
        currO -> next = evenHead;
        return head;
    }
};
