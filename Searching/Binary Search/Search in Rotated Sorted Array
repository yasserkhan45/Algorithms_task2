https://leetcode.com/explore/learn/card/binary-search/125/template-i/952/


class Solution {
public:
    int search(vector<int>& nums, int target) {
        int n = nums.size();
        int l = 0, r = n - 1;
        while(l < r){
            int mid = (l + r) / 2;
            if(nums[mid] > nums[r]) l = mid + 1;
            else r = mid;
        }
        int rot = l;
        l = 0;
        r = n - 1;
        while(l <= r){
            int mid = (l + r) / 2;
            int res=(mid + rot) % n;
            if(nums[res] == target) return res;
            if(nums[res] < target) l = mid + 1;
            else r = mid - 1;
        }
        return -1;
    }
};
